library ieee;
use ieee.std_logic_1164.all;

entity tb_ALU is
end entity tb_ALU;

architecture archi_tb_ALU of tb_ALU is

	component ALU is
		port (
			A : in std_logic_vector(15 downto 0);
			B : in std_logic_vector(15 downto 0);
			SelR : in std_logic_vector(2 downto 0); -- 3 bits donc 8 opérations possibles
			R : out std_logic_vector(15 downto 0);
			Status : out std_logic_vector(1 downto 0)
		);
	end component ALU;
	
	signal tb_A : std_logic_vector(15 downto 0);
	signal tb_B : std_logic_vector(15 downto 0);
	signal tb_SelR : std_logic_vector(2 downto 0); -- 3 bits donc 8 opérations possibles
	signal tb_R : std_logic_vector(15 downto 0);
	signal tb_Status : std_logic_vector(1 downto 0);
	
begin

	inst_ALU : component ALU
		port map(
			A => tb_A,
			B => tb_B,
			SelR => tb_SelR,
			R => tb_R,
			Status => tb_Status
		);
	
	process
	begin
		wait for 100 ns;
		tb_A <= "0000000000000110";
		tb_B <= "0000000000000010";
		wait for 100 ns;
		tb_SelR <= "000";
		wait for 100 ns;
		tb_SelR <= "001";
		wait for 100 ns;
		tb_SelR <= "010";
		wait for 100 ns;
		tb_SelR <= "011";
		wait for 100 ns;
		tb_SelR <= "100";
		wait for 100 ns;
		tb_SelR <= "101";
		wait;
	end process;

end architecture archi_tb_ALU;